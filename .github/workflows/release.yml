name: Release Workflow

on:
  push:
    branches:
      - main
    tags-ignore:
      - '*'

jobs:
  # --- JOB 1: UPDATE TRANSLATIONS ---
  update-translations:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext

      - name: Update Templates
        run: ./build.sh update-templates

      - name: Commit and Push Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Chore: Update translation templates"
          file_pattern: "po/"
          commit_user_name: "GitHub Action Bot"
          commit_user_email: "actions@github.com"

  # --- JOB 2: CREATE THE RELEASE ---
  create-release:
    needs: update-translations
    if: startsWith(github.event.head_commit.message, 'Version ')

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gettext

      - name: Extract Version from Commit Message
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          RELEASE_VERSION=$(echo "$COMMIT_MSG" | sed -n 's/^Version \([0-9.]*\).*/\1/p')
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

      - name: Build the Extension Package
        run: ./build.sh package

      - name: Determine Asset Filename
        run: echo "ASSET_NAME=$(jq -r '.uuid' extension/metadata.json).zip" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.RELEASE_VERSION }}
          name: ${{ github.event.head_commit.message }}
          files: ${{ env.ASSET_NAME }}
          generate_release_notes: true